##################################################################
# Take predictions generated by model_1 and model_2
# and compute both arithmetic, geometric means
# This gives about .967 leaderboard score

import numpy as np
import pandas as pd

def main():
    # These submission files should already be sorted by 'id'
    model_1_name = './submissions/retrain_vgg16_2019-02-19_14:22:39_2.csv'
    model_2_name = './submissions/pretrain_NASNet_2019-02-18_11:50:56.csv'

    vgg = pd.read_csv(model_1_name)
    nasnet = pd.read_csv(model_2_name)

    vgg_pred = np.array(vgg.sort_values('id')['label'])
    nasnet_pred = np.array(nasnet.sort_values('id')['label'])

    #sort_ids = vgg.sort_values('id')['id']

    geometric_avg = (vgg_pred*nasnet_pred)**.5
    arithmetic_avg = (vgg_pred + nasnet_pred)/2.0

    geo_ens_lines = [vgg['id'][i] + ',' + str(geometric_avg[i]) for i in range(len(geometric_avg))]
    ari_ens_lines = [vgg['id'][i] + ',' + str(arithmetic_avg[i]) for i in range(len(arithmetic_avg))]

    f = open('./submissions/' + 'geometric_vgg_nasnet' + '.csv', 'w')
    f.write('id,label\n')
    for l in geo_ens_lines:
        f.write(l+"\n")
    f.close()

    f = open('./submissions/' + 'arithmetic_vgg_nasnet' + '.csv', 'w')
    f.write('id,label\n')
    for l in ari_ens_lines:
        f.write(l+"\n")
    f.close()

if __name__ == "__main__":
    main()